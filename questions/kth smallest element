//{ Driver Code Starts
//Initial function template for C++

#include<bits/stdc++.h>
using namespace std;

// } Driver Code Ends
//User function template for C++

class Solution{
    public:
    // arr : given array
    // l : starting index of the array i.e 0
    // r : ending index of the array i.e size-1
    // k : find kth smallest element and return using this function
    /*here logic used=  max heap algorithm
    max heap push(arr[i]);...is pushig the size of array(i) into the heap
    as it checking the value of i when >k where k is smallest element in array
    it is popping out out the elements one by  one which is greater than k!
    
    and printing out the top elements which is k
    
    
    */
    
        int kthSmallest(int arr[], int l, int r, int k) {
        priority_queue<int> maxHeap;
        for(int i = l; i <= r; ++i) {
            maxHeap.push(arr[i]);
            if(maxHeap.size() > k) {
                maxHeap.pop();}
        }
        return maxHeap.top();
    }

    
};

//{ Driver Code Starts.
 
int main()
{
    int test_case;
    cin>>test_case;
    while(test_case--)
    {
        int number_of_elements;
        cin>>number_of_elements;
        int a[number_of_elements];
        
        for(int i=0;i<number_of_elements;i++)
            cin>>a[i];
            
        int k;
        cin>>k;
        Solution ob;
        cout<<ob.kthSmallest(a, 0, number_of_elements-1, k)<<endl;
    }
    return 0;
}
// } Driver Code Ends
